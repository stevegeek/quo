# Generated from lib/quo/eager_query.rb with RBS::Inline

module Quo
  # @rbs inherits Quo::Query
  class EagerQuery < Quo::Query
    # @rbs override
    def count: ...

    # @rbs override
    def page_count: ...

    # Is this query object paged? (when no total count)
    # @rbs override
    def paged?: ...

    # @rbs return: Object & Enumerable[untyped]
    def collection: () -> (Object & Enumerable[untyped])

    # @rbs return: Object & Enumerable[untyped]
    def query: () -> (Object & Enumerable[untyped])

    # @rbs override
    def relation?: ...

    # @rbs override
    def eager?: ...

    private

    # @rbs override
    def underlying_query: ...

    # @rbs (untyped records, ?untyped? preload) -> untyped
    def preload_includes: (untyped records, ?untyped? preload) -> untyped
  end
end
