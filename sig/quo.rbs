module Quo
  VERSION: String

  type query = Quo::Query
  type queryOrRel = query | ActiveRecord::Relation
  type enumerable = Object & Enumerable[untyped]
  type relOrEnumerable = ActiveRecord::Relation | enumerable
  type composable = query | relOrEnumerable

  # TODO: how can we do the known options, eg `page` and then allow anything else?
  # Maybe we should separate out the known options from the unknown options
  type queryOptions = Hash[Symbol, untyped]

  interface _Logger
    def info: (String) -> void
    def error: (String) -> void
    def debug: (String) -> void
  end

  class Configuration
    attr_accessor formatted_query_log: bool?
    attr_accessor query_show_callstack_size: Integer?
    attr_accessor logger: _Logger?
    attr_accessor max_page_size: Integer?
    attr_accessor default_page_size: Integer?

    def initialize: () -> void
  end
  attr_reader self.configuration: Configuration

  def self.configure: () { (Configuration config) -> void } -> void
end
